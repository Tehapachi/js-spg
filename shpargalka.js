'use strict'; // Означає що ми пишем на стандарті es6 і деякі помилки минулих стандартів
// працювати не будуть


    // Переменние
var NameVariable = 1; // переменная имя = значение;
// существует даже до того как программа до него доходит
// -плохо влияет на оптимизацию

let NameV = 2; // переменная имя = значение;
// обычная переменная начинает быть выдимой только после
// того как программа ее пройдет/
// видима только для программ находящихся после нее

const pi = 3; // непеременная неизменная константа
// значение не изменяется

////////////////////////////////////////////////////////////////

    // Типы данных
var numb = 1; // число
var string = "Hello world"; //строка
var sym = Symbol(); // символ
var boolean = true; // логическое значение
null; // коли в коді чогось не існує
undefined; // об'єк існує але не має значення
var obj = {}; // об'єкт структура яка використовується для зберігання даних

//////////////////////////////////////////////////

    // Способи виводу  // Модальні Вікна
console.log(); // виводим інформацію в консоль розробника
alert("Hello World"); // виводим інформацію на екран у вигляді модального вікна
confirm("Дайте відповыть так чи відміна"); // дає вибір у модальному вікні так або відміна
let name = confirm("Ви згідні чи иідміна"); // вибір юзера // буде занесено в змінну
let name = prompt("Введіть назву вашого міста","стандартне значення");
// юзер може ввести текст який буде занесено в змінну

/////////////////////////////////////
    // ОПЕРАТОРИ
let name = 5%2; // % залишок після ділення
    // операторі рівності =
let name = console.log("1" == numb); // два рази = це перевірка на рівність значень тобто дорівнює
let name = console.log("1" === numb); // три рази це строга перевірка по типу данних
    // логічні оператори
console.log( name && name); // && означає І перевіряєм значення 1 і 2
// мають бути вірними всі значення, якщо хоч одне буде не вірним видасть false

console.log( name || name); // || означає або І перевіряєм значення 1 і 2
    // має бути вірним хочаб одне значення, якщо хоч одне буде вірним видасть true

console.log( !name || !name); // !name !знак оклику це оператор відріканна
    // він обертає значення навпаки тобто якщо name == true то !name == folse

///////////////////////////
    // GIT
//встановлюєм гіт
//Наводим миш на папку в якій знаходиться проект та нажимаєм правий клік
//вибираєм git bash here і відкриється консоль
    // Встановлюєм гіт ввівши наступну команду
// git init

// echo >> README.MD    // створюєм файл з описом проекту
// git commit --a --m "текст доданого комменту"

// git --A // вказуэм щоб гіт слідкував за всіма файлами // також можна задати конкретний файл

// git --status  // показує статус які папки присутні в гіт
























